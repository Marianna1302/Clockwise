"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.printSharedListeners = void 0;
const typescript_1 = require("typescript");
function printSharedListeners(parsedLogic) {
    return typescript_1.factory.createTypeLiteralNode(parsedLogic.sharedListeners.map(({ name, payload, action }) => typescript_1.factory.createPropertySignature(undefined, typescript_1.factory.createStringLiteral(name), undefined, typescript_1.factory.createFunctionTypeNode(undefined, [
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('payload'), undefined, payload || typescript_1.factory.createKeywordTypeNode(typescript_1.SyntaxKind.AnyKeyword), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('breakpoint'), undefined, typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('BreakPointFunction'), undefined), undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('action'), undefined, action, undefined),
        typescript_1.factory.createParameterDeclaration(undefined, undefined, undefined, typescript_1.factory.createIdentifier('previousState'), undefined, typescript_1.factory.createKeywordTypeNode(typescript_1.SyntaxKind.AnyKeyword), undefined),
    ], typescript_1.factory.createUnionTypeNode([
        Object.assign(Object.assign({}, typescript_1.factory.createToken(typescript_1.SyntaxKind.VoidKeyword)), { _typeNodeBrand: true }),
        typescript_1.factory.createTypeReferenceNode(typescript_1.factory.createIdentifier('Promise'), [
            Object.assign(Object.assign({}, typescript_1.factory.createToken(typescript_1.SyntaxKind.VoidKeyword)), { _typeNodeBrand: true }),
        ]),
    ])))));
}
exports.printSharedListeners = printSharedListeners;
//# sourceMappingURL=printSharedListeners.js.map