import * as ts from 'typescript';
import { AppOptions, NameType, ParsedLogic } from './types';
export declare function logicSourceToLogicType(logicSource: string, appOptions?: AppOptions): string;
export declare function sourceToSourceFile(sourceCode: string, filename?: string): ts.SourceFile;
export declare function programFromSource(sourceCode: string): ts.Program;
export declare function isKeaCall(node: ts.Node, checker: ts.TypeChecker): boolean;
export declare function getTypeNodeForNode(node: ts.Node, checker: ts.TypeChecker): ts.TypeNode;
export declare function getAndGatherTypeNodeForDefaultValue(defaultValue: ts.Node, checker: ts.TypeChecker, parsedLogic: ParsedLogic): ts.TypeNode;
export declare function getParameterDeclaration(param: ts.ParameterDeclaration): ts.ParameterDeclaration;
export declare const toSpaces: (key: any) => any;
export declare function getActionTypeCreator(parsedLogic: ParsedLogic): (actionName: any) => string;
export declare function cleanDuplicateAnyNodes(reducers: NameType[]): NameType[];
export declare function extractImportedActions(actionObjects: ts.Expression | ts.ObjectLiteralExpression, checker: ts.TypeChecker, parsedLogic: ParsedLogic): {};
export declare function getLogicPathString(appOptions: AppOptions, fileName: string): string;
export declare function getFilenamesForSymbol(symbol: ts.Symbol): string[] | undefined;
export declare function gatherImports(input: ts.Node, checker: ts.TypeChecker, parsedLogic: ParsedLogic): void;
export declare function storeExtractedSymbol(symbol: ts.Symbol, checker: ts.TypeChecker, parsedLogic: ParsedLogic, typeRootName?: string): void;
export declare function getFilenameForImportDeclaration(checker: ts.TypeChecker, importNode: ts.ImportDeclaration): string;
export declare function getFilenameForImportSpecifier(declaration: ts.ImportSpecifier, checker: ts.TypeChecker): string | void;
export declare function arrayContainsSet(array: string[], setToContain: Set<string>): boolean;
export declare function unPromisify(node: ts.Node): ts.Node;
export declare function isAnyUnknown(node?: ts.Node): boolean;
